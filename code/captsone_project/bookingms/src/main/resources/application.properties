spring.application.name=bookingms
server.port=9002
spring.datasource.url=jdbc:mysql://localhost:3306/flightdb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=Pavan33
spring.jpa.hibernate.ddl-auto=update

eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
# Client sends heartbeat every 30s
eureka.instance.lease-renewal-interval-in-seconds=30  

# Eureka evicts after 90s of no heartbeat
eureka.instance.lease-expiration-duration-in-seconds=90

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.group-id=booking-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.main.web-application-type=reactive

resilience4j.circuitbreaker.instances.flightService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.flightService.slidingWindowSize=10
resilience4j.circuitbreaker.instances.flightService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.flightService.waitDurationInOpenState=10000
